# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/php:7.4-apache

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/mysql:5.7

    working_directory: ~/repo

    steps:
      - checkout


      - run: sudo usermod -a -G circleci www-data
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "composer.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run:
          name: Install PHP extensions
          command: |
            sudo -E apt-get update
            sudo -E docker-php-ext-install pdo_mysql
            sudo -E docker-php-ext-enable pdo_mysql
            sudo -E apt-get install libzip-dev
            sudo -E docker-php-ext-install zip
            sudo -E docker-php-ext-install sockets
            sudo -E apt-get install libxslt1-dev
            sudo -E docker-php-ext-install xsl
      - run:
          name: Disable xdebug
          command: |
            sudo sed -i 's/^zend_extension/;zend_extension/g' /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      - run:
          name: Set php.ini settings
          command: |
            echo -e "[Date]\ndate.timezone = 'America/Phoenix'" | sudo tee /usr/local/etc/php/php.ini > /dev/null
      - run: composer update symfony/flex --no-plugins --no-scripts
      - run: composer install -n --prefer-dist
      - run: cp behat.local.yml.dist behat.local.yml
      - run:
          name: Install npm
          command: |
            curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -
            sudo apt-get install -y nodejs
      - run: npm install
      - run: npm run build
      - run: sudo npm install -g zombie
      - run: sudo chmod -R 777 var/
      - run: cp .env .env.local
      - run:
          name: Configure .env.local
          command: |
            sed 's/\(^APP_ENV=\)dev/\1'ci'/' -i .env.local
            sed 's/\(^APP_SECRET=\)/\1'secret'/' -i .env.local
            sed 's/\(^TEST_ID=\)/\1\"'"$TEST_ALMA_USER_ID"'\"/' -i .env.local
            sed 's/\(^TEST_PASS=\)/\1'$ALMA_CIRCLECI_TEST_USER_PASSWORD'/' -i .env.local
            sed 's/\(^USE_TEST_ID=\)/\1'TRUE'/' -i .env.local
            sed 's/\(^DB_USER=\)/\1'root'/' -i .env.local
            sed 's/\(^DB_NAME=\)/\1'circle_test'/' -i .env.local
            sed 's#\(^API_URL=\)#\1'$ALMA_API_URL'#' -i .env.local
            sed 's/\(^API_KEY=\)/\1'$ALMA_API_KEY'/' -i .env.local
      - run: php bin/console doctrine:migrations:migrate --no-interaction

      - run: sudo sed 's/\(^CipherString = DEFAULT@SECLEVEL=\)2/\1'1'/' -i /etc/ssl/openssl.cnf

      - save_cache:
          paths:
            - ./vendor
          key: v1-dependencies-{{ checksum "composer.json" }}

      - run: sudo a2dissite 000-default
      - run: sudo cp .circleci/circleci.conf /etc/apache2/sites-available
      - run: sudo a2ensite circleci
      - run: sudo a2enmod rewrite
      - run: sudo service apache2 restart
      # run tests!
      - run: composer test
  deploy-docs:
    docker:
      # specify the version you desire here
      - image: circleci/php:7.4-apache
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "composer.json" }}
      - run: sudo -E apt-get update
      - run:
          name: Install awscli
          command: |
            sudo apt-get install awscli
      - run:
          name: Install PHP extensions
          command: |
            sudo -E apt-get install libzip-dev
            sudo -E docker-php-ext-install zip
            sudo -E docker-php-ext-install sockets
            sudo -E apt-get install libxslt1-dev
            sudo -E docker-php-ext-install xsl
      - run:
          name: Disable xdebug
          command: |
            sudo sed -i 's/^zend_extension/;zend_extension/g' /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      - run:
          name: Deploy docs to S3
          command: |
              composer docs:build && composer docs:deploy
workflows:
  version: 2
  build-test:
    jobs:
      - build:
          filters:
            branches:
              only:
                - develop
                - /release*/
  build-deploy-docs:
    jobs:
      - build
      - deploy-docs:
          requires:
            - build
          filters:
            branches:
              only: master
